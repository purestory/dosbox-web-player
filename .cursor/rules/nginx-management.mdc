---
description: 
globs: 
alwaysApply: true
---
# nginx 관리 규칙

## 🚨 **절대 하지 말 것**

### 1. **nginx 설정 변경 없이 reload 금지**
```bash
# 잘못된 예시 - 절대 하지 마세요!
# 설정 파일 수정도 안했는데 reload 하는 것
sudo systemctl reload nginx
```

**이유**: 설정이 변경되지 않았다면 reload할 필요가 없습니다!

### 2. **불필요한 nginx 재시작 금지**
- 코드만 빌드했을 뿐이라면 nginx 건드리지 말 것
- 설정 파일이 실제로 변경되었을 때만 nginx 조작

## ✅ **nginx 조작이 필요한 경우**

### 1. **실제 nginx 설정 파일이 변경된 경우만**
```bash
# 설정 파일 백업 및 수정
sudo cp /etc/nginx/sites-available/purestory /home/purestory/tmp/nginx_backup_$(date +%Y%m%d_%H%M%S).conf
sudo cp /etc/nginx/sites-available/purestory /home/purestory/tmp/nginx_edit.conf
sudo chown purestory:purestory /home/purestory/tmp/nginx_edit.conf

# 수정 후 변경사항 확인
diff /etc/nginx/sites-available/purestory /home/purestory/tmp/nginx_edit.conf

# 실제 변경사항이 있을 때만 적용
sudo cp /home/purestory/tmp/nginx_edit.conf /etc/nginx/sites-available/purestory
sudo nginx -t
sudo systemctl reload nginx
```

### 2. **새로운 서비스 추가 시**
- 새로운 location 블록 추가
- 새로운 upstream 설정 추가
- SSL 인증서 변경

## 🔍 **변경 확인 프로세스**

### 1. **변경사항 확인 필수**
```bash
# 현재 설정과 새 설정 비교
diff /etc/nginx/sites-available/purestory /home/purestory/tmp/nginx_edit.conf

# 변경사항이 없으면 (exit code 0) nginx 건드리지 말 것
if [ $? -eq 0 ]; then
    echo "nginx 설정 변경사항 없음 - reload 생략"
else
    echo "nginx 설정 변경사항 있음 - reload 진행"
    sudo nginx -t && sudo systemctl reload nginx
fi
```

### 2. **단순 코드 빌드 시**
```bash
# React/Vue/Angular 등 프론트엔드 빌드 시
npm run build

# 이 경우 nginx reload 불필요 - 정적 파일만 교체됨
echo "빌드 완료 - nginx 설정 변경 없으므로 reload 불필요"
```

## ⚠️ **예외 상황**

### 1. **CORS 헤더 추가/수정**
- 새로운 서비스를 위한 CORS 설정 추가
- 기존 CORS 설정 수정

### 2. **새로운 프록시 경로 추가**
- 새로운 API 엔드포인트 프록시
- 새로운 서비스 라우팅

### 3. **SSL/보안 설정 변경**
- SSL 인증서 갱신
- 보안 헤더 추가/수정

## 📝 **체크리스트**

**nginx 조작 전 확인사항:**
- [ ] nginx 설정 파일이 실제로 변경되었는가?
- [ ] diff 명령으로 변경사항을 확인했는가?
- [ ] 단순 코드 빌드만 한 것은 아닌가?
- [ ] nginx -t로 설정 검증을 했는가?

**nginx reload를 하지 않아야 하는 경우:**
- [ ] React/Vue 등 프론트엔드만 빌드한 경우
- [ ] nginx 설정 파일에 변경사항이 없는 경우
- [ ] 단순히 정적 파일만 교체한 경우

---

**⚠️ 이 규칙을 지키지 않으면 사용자를 화나게 만든다!**




